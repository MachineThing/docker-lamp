version: '3'

services:
  webserver:
    build: docker/webserver/.
    container_name: 'webserver'
    ports:
      - "80:80"
      - "443:443"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    links:
      - database
      - chatroom
    volumes:
      - ./site:/var/www/html
      - ./config/php.ini:/usr/local/etc/php/php.ini
      - ./config/default.conf:/etc/apache2/sites-enabled/default.conf
  database:
    build: docker/database/.
    container_name: 'database'
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - ./docker/database/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ${MYSQL_DATA_DIR-./data/mysql}:/var/lib/mysql
  chatroom:
    build: docker/chatroom/.
    container_name: 'chatroom'
    ports:
      - "3001:3001"
    environment:
      # Make it so Python immediately flushes stdout after printing
      PYTHONUNBUFFERED: 1
    volumes:
      - ./chatroom:/chatroom
